{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{242:function(t,v,_){\"use strict\";_.r(v);var l=_(0),i=Object(l.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[_(\"h2\",{attrs:{id:\"字符串修改dom\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字符串修改dom\"}},[t._v(\"#\")]),t._v(\" 字符串修改DOM\")]),t._v(\" \"),_(\"p\",[t._v(\"开发中插入大段的DOM节点或者比较长的DOM结构时比较麻烦。\")]),t._v(\" \"),_(\"p\",[t._v(\"###修改DOM节点HTML\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"innerHTML\")]),t._v(\" \"),_(\"li\",[t._v(\"outerHTML\")])]),t._v(\" \"),_(\"p\",[t._v(\"读写html标记的，可以调用某个节点的这两个属性，这两个属性是可写也是可读的。\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[_(\"p\",[t._v(\"**读模式：**这两个属性对应的值是一个字符串形式的html文本。\")])]),t._v(\" \"),_(\"li\",[_(\"p\",[_(\"strong\",[t._v(\"写模式：\")]),t._v(\" 可以把一个字符串赋值给这两个属性，这时浏览器会把这个字符串转换成html文本插入到你对应的节点当中。\")])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"**区别：**包不包含当前节点\")]),t._v(\" \"),_(\"ul\",[_(\"li\",[t._v(\"innerHTML只会修改或者读取当前节点的内部元素。\")]),t._v(\" \"),_(\"li\",[t._v(\"outerHTML修改或者读取的是当前节点以及它的子元素。\")])])]),t._v(\" \"),_(\"li\",[_(\"p\",[_(\"strong\",[t._v(\"注意事项：\")])]),t._v(\" \"),_(\"ol\",[_(\"li\",[_(\"p\",[t._v(\"读模式下，不同的浏览器返回的字符串结果是不一样的：标签是否大小写，是否包含空格，是否包含缩进。HTML不区分大小写。\")])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"写模式下，设置的值跟解析后很有肯能是不一样的。因为浏览器会按照DOM标准去把这些字符串转换成浏览器可以识别的形式，这个过程也叫字符串到DOM树的序列化。\")])]),t._v(\" \"),_(\"li\",[_(\"p\",[t._v(\"插入\"),_(\"script\")])])])])])])}),[],!1,null,null,null);v.default=i.exports}}]);","extractedComments":[]}