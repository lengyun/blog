{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{225:function(s,t,a){\"use strict\";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"h2\",{attrs:{id:\"对象回顾\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对象回顾\"}},[s._v(\"#\")]),s._v(\" 对象回顾\")]),s._v(\" \"),n(\"p\",[s._v(\"回顾：\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"对象\")]),s._v(\"：是在js当中有各种属性名称以及属性的名称所对应的值所组成的无序的合集。\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[n(\"strong\",[s._v(\"对象分类\")]),s._v(\"：\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"内部对象\")]),s._v(\" \"),n(\"blockquote\",[n(\"p\",[s._v(\"不需要使用new操作符\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"错误对象\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"内置对象\")]),s._v(\" \"),n(\"p\",[s._v(\"Math  JSON Global\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"常用对象\")]),s._v(\" \"),n(\"p\",[s._v(\"布尔类型Boolean，字符串类型String，数字类型Number，数组Array，时间Date，函数function ，对象Object，正则表达式RegExp\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"宿主对象\")]),s._v(\" \"),n(\"p\",[s._v(\"js运行环境 window Document\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"自定义对象\")]),s._v(\" \"),n(\"p\",[s._v(\"其他所有对象\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[n(\"strong\",[s._v(\"对象创建：\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"new操作符\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"new Object()\")]),s._v(\"  不需要传值后面的（）可以省略\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"对象字面量\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" person \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    name \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Nicholas\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    age \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"29\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"ES5创建对象方法\")]),s._v(\" \"),n(\"p\",[s._v(\"Object.create(原型,对象描述信息)\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[n(\"strong\",[s._v(\"对象的访问：\")])]),s._v(\" \"),n(\"blockquote\",[n(\"p\",[s._v(\"两种方式在本质上没有区别\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"使用“.”\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"使用“[]”\")]),s._v(\" \"),n(\"p\",[s._v(\"属性是个变量时使用 []，属性中包含特殊字符使用[]\")])])]),s._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(72),alt:\"js对象属性查询解释器执行流程\"}})])])]),s._v(\" \"),n(\"p\",[s._v(\"基础数据类型中的\"),n(\"strong\",[s._v(\"null 为什么在typeof操作符下返回 object\")]),s._v(\" ?\")]),s._v(\" \"),n(\"p\",[s._v(\"在计算机中所有的变量都是保存在内存当中的。所有的数据在内存中都是以2进制进行保存的。js的解释器进行编译的时候有这样的规则：如果一个数据它转换为二进制后前3位都是0的话，这时使用typeof查看的时候得到的就是Object。也就是说如果把一个数据转化为二进制，当它的前三位都是0的话就表示这个东西是个对象。null转化为二进制都是0，所以后面追加了undefined\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"数组\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组\"}},[s._v(\"#\")]),s._v(\" 数组\")]),s._v(\" \"),n(\"p\",[s._v(\"数组都是数据的有序列表。\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"js数组特性：\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"每一项可以放任何类型数据\")]),s._v(\" \"),n(\"li\",[s._v(\"数组大小可一随意调整\")])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"创建：\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"Array构造函数\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//参数只有一个数字的时候，创建一个空数组参数表示数组的长度。\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// colors.length >20\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//多个参数时，参数是数组中应该包含的项\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 也可省略new操作符\")]),s._v(\"\\n\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"数组字面量\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 浏览器不兼容\")]),s._v(\"\\n\")])])]),n(\"blockquote\",[n(\"p\",[s._v(\"最后一项不要加“，”逗号\")]),s._v(\" \"),n(\"p\",[s._v(\"不要用多个，创建空数组\")])])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"读取\")]),s._v(\" \"),n(\"p\",[s._v(\"数组的读取使用[] 加上数组索引方式。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// red\")]),s._v(\"\\n\")])])]),n(\"p\",[s._v(\"数组也是对象，对象的属性访问方式有两种，使用 . 和 [] 的方式。数组的属性名称是以数字的方式体现的。所以数组的访问要使用 [] 的方式进行提取。\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"索引从0开始\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"数组也可以添加其他属性\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"name \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"colorName\"')]),s._v(\" \\ncolors \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('//[\"red\", \"blue\", \"green\", name: \"colorName\"]')]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 添加的其他属性可以通过 . 和 [] 访问，添加其他属性不在数组排序属性中。\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'name'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('//\"colorName\"')]),s._v(\"\\n\")])])])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"写入/修改\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'yellow'\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('//[\"red\", \"blue\", \"yellow\"]')]),s._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[s._v(\"当给数组写入一个比数组长度大的值，此时数组的长度会对应的改变。\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\ncolors \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"yellow\"')]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('// [\"red\", \"blue\", \"green\", undefined,undefined, \"yellow\"]')]),s._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"delet 操作符删除\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"delete\")]),s._v(\" colors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('// [\"red\", \"blue\", undefined]')]),s._v(\"\\n\")])])]),n(\"p\",[s._v(\"数组长度不会改变，被删除的项为undefined\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"数组长度\")]),s._v(\" \"),n(\"p\",[s._v(\"数组也属于对象的一种，只不过是它里面的属性名称是按0-n顺序依次排列出来的。\")]),s._v(\" \"),n(\"p\",[s._v(\"数组中有个特殊属性length，他表示数组长度。始终放回正整数（自然数）。\")]),s._v(\" \"),n(\"p\",[s._v(\"length值可修改，长度的改变可影响数组\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// length值设置大于数组长度时数组会用undefined 填充值\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('//[\"red\", \"blue\", \"green\", undefined,undefined]')]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// length值设置小于数组长度时数组会删除多余的值\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('// [\"red\", \"blue\"]')]),s._v(\"\\n\")])])]),n(\"p\",[s._v(\"设置length的值为其他数据类型时，可以转化为自然数的就转化为自然数。不转化为自然数的报错。\")]),s._v(\" \"),n(\"p\",[s._v(\"数组的长度非常大\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"数组的检查\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"instanceof 操作符\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"value \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"instanceof\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//对数组执行某些操作\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"constructor\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"constructor \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"===\")]),s._v(\" Array \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// true\")]),s._v(\"\\n\")])])]),n(\"p\",[n(\"strong\",[s._v(\"缺点\")]),s._v(\"：instanceof 和 constructor 如果网页中包含多个框架，那实际上就存在两个以上不同的全局执行环境，从而存在两个以上不同版本的 Array 构造函数。如果你从一个框架向另一个框架传入一个数组，那么传入的数组与在第二个框架中原生创建的数组分别具有各自不同的构造函数。\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"ES5 的Array.isArray()方法\")])])]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"Array\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"isArray\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//对数组执行某些操作\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),n(\"p\",[s._v(\"不用考虑执行环境，但有低版本兼容性\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"兼容方法\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Object\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"prototype\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"toString\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"call\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"[object Array]\"')]),s._v(\" \\n\")])])])])]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"数组检测函数\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"ArrayChect\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"value\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"typeof\")]),s._v(\" Array\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"isArray \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"function\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n   \\t  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" Array\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"isArray\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Object\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"prototype\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"toString\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"call\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"[object Array]\"')]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])])])]),s._v(\" \"),n(\"h2\",{attrs:{id:\"数组操作\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组操作\"}},[s._v(\"#\")]),s._v(\" 数组操作\")]),s._v(\" \"),n(\"hr\"),s._v(\" \"),n(\"blockquote\",[n(\"p\",[s._v(\"ES3方法\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"栈方法\")]),s._v(\" \"),n(\"blockquote\",[n(\"p\",[s._v(\"栈是一种 LIFO（Last-In-First-Out，后进先出）的数据结构，也就是最新添加的项最早被移除。而栈中项的插入（叫做推入）和移除（叫做弹出），只发生在一个位置——栈的顶部。（汗摞塔）\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"push()\")]),s._v(\" \"),n(\"p\",[s._v(\"可以接收任意数量的参数，把他们逐个添加到数组末尾，并返回修改后的数组的长度。\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"pop()方法\")]),s._v(\" \"),n(\"p\",[s._v(\"从数组末尾移除最后一项，减少数组的length值，然后返回移除的项\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"列队方法\")]),s._v(\" \"),n(\"blockquote\",[n(\"p\",[s._v(\"队列数据结构的访问规则是 FIFO （First-In-First-Out，先进先出）。队列在列表的末端添加项，从列表的前端移除项。\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"shift()\")]),s._v(\" \"),n(\"p\",[s._v(\"移除数组中的第一个项并返回该项，同时将数组长度减1。\")]),s._v(\" \"),n(\"p\",[s._v(\"shift()和 push()结合使用，数组后面添加前面删除\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"unshift()\")]),s._v(\" \"),n(\"p\",[s._v(\"可以接收任意数量的参数，把他们逐个添加到数组前端，并返回修改后的数组的长度。\")]),s._v(\" \"),n(\"p\",[s._v(\"unshift()和 pop()方法结合使用，数组前面添加后面移除项\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"重排序方法\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"reverse()\")]),s._v(\" \"),n(\"p\",[s._v(\"反转数组项的顺序。\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"sort()\")]),s._v(\" \"),n(\"p\",[s._v(\"接受参数是个函数，函数作用是对数组进行自定义排序。\")]),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"默认情况下\")]),s._v(\"：没有参数时，先将数组的每一项转化为字符串，然后按照字符串asce码大小进行排序。\")]),s._v(\" \"),n(\"p\",[s._v(\"**比较函数：**接收两个参数，两个参数表示依次比较的时候所用到的两个值，比较从数组的第一个值和第二个值开始依次比较，遇到需要调整位置时，调整后从头开始再比较（冒泡排序）\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" values \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"15\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\nvalues\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"sort\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"compare\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"compare\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"value1\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" value2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"value1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" value2\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"value1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" value2\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),n(\"p\",[s._v(\"sort()排序性能问题：\")]),s._v(\" \"),n(\"p\",[s._v(\"针对大的数组可以分成两个，分别对两个进行排序。如有1000个值的数组，项把大于500和小于500的值分成两组，然后分别进行sort()排序，最后合并这两个数组。\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"操作方法\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"join()方法\")]),s._v(\" \"),n(\"p\",[s._v(\"使用不同的分隔符来构建这个字符串。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" a\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"30\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"200\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"55\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\na\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"join\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'*'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('// \"30*200*55\"')]),s._v(\"\\n\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"concat()方法\")]),s._v(\" \"),n(\"p\",[s._v(\"接受任意数量的参数，依次将参数放到数组的末端。（类似push方法）\")]),s._v(\" \"),n(\"blockquote\",[n(\"p\",[s._v(\"基于当前数组中的所有项创建一个新数组。具体来说，这个方法会先创建当前数组一个副本，然后将接收到的参数添加到这个副本的末尾，最后返回新构建的数组。\")])]),s._v(\" \"),n(\"p\",[s._v(\"跟push()方法比较：\")]),s._v(\" \"),n(\"pre\",[n(\"code\",[s._v(\"1. push() 对原有数组有影响，cancat()对原有数组没有影响\\n2. 参数中有数组的情况下：push()会把是数组的参数当作原有数组的一项，添加到原有数组中。cancat()会把是数组的参数拆开，把每一项添加到原有数组中。\\n\")])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"slice()方法\")]),s._v(\" \"),n(\"p\",[s._v(\"对数组进行截取，返回截取后的数组。接受两个参数，即要返回项的起始和结束位置。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" colors \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"red\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"green\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"blue\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"yellow\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"purple\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 不传参数 返回所有\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"slice\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('// \"red\",\"green\",\"blue\",\"yellow\",\"purple\"')]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 一个参数，从参数的位置到结束\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"slice\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('//\"green\",\"blue\",\"yellow\",\"purple\"')]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"slice\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//green,blue,yellow\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 参数时负数，用数组长度加上该数来确定相应的位置。用于取数组尾部值\")]),s._v(\"\\ncolors\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"slice\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('// colors.slice(3,4)  \"yellow\"')]),s._v(\"\\n\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"splice()方法\")]),s._v(\" \"),n(\"p\",[s._v(\"向数组的中部插入项。形成三个功能，删除、插入、替换\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"一个参数\")]),s._v(\" \"),n(\"p\",[s._v(\"从传参数的位置删到最后,返回删除的数组项的值\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"两个参数（a,b）\")]),s._v(\" \"),n(\"p\",[s._v(\"从参数a位置开始删除 b个数组项，返回删除的值\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"三个参数即以上（a,b,c）\")]),s._v(\" \"),n(\"p\",[s._v(\"从参数a位置开始删除 b个数组项，插入c\")])])])])])])]),s._v(\" \"),n(\"blockquote\",[n(\"p\",[s._v(\"操作方法对原有数组没影响，栈方法、队列方法、重排方法影响原数组\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"位置方法\")]),s._v(\" \"),n(\"p\",[s._v(\"返回值都是数字。作用在数组中查找，找到就停，返回找到的值的位置。\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"indexOf()\")]),s._v(\" \"),n(\"p\",[s._v(\"从数组前向后找\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"lastIndexOf()\")]),s._v(\" \"),n(\"p\",[s._v(\"从数组后向前找\")])])]),s._v(\" \"),n(\"p\",[s._v(\"第一个参数，要查找的项。第二个参数，查找起点位置。没找到返回-1。匹配条件是全等的匹配条件===\")]),s._v(\" \"),n(\"hr\"),s._v(\" \"),n(\"p\",[s._v(\"ES5方法\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"迭代方 法\")]),s._v(\" \"),n(\"p\",[s._v(\"接受的参数相同，作用也相同，返回值不同。\")]),s._v(\" \"),n(\"p\",[s._v(\"参数：1每一项上要运行的函数，2可选的运行该函数的作用域对象\")]),s._v(\" \"),n(\"p\",[s._v(\"作用：对数组中的每一项都运行传入的函数，这个函数都接收三个参数，1数组的项，2索引，3整个数组本身。\")]),s._v(\" \"),n(\"p\",[s._v(\"every()  都为true，返回true\")]),s._v(\" \"),n(\"p\",[s._v(\"filter()   返回为true的项组成的数组\")]),s._v(\" \"),n(\"p\",[s._v(\"forEach()  没有返回\")]),s._v(\" \"),n(\"p\",[s._v(\"map() 返回每次函数调用的结果组成的数组\")]),s._v(\" \"),n(\"p\",[s._v(\"some() 一个为true就返回true\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" numbers \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" mapResult \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" numbers\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"map\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"item\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" index\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" item \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"mapResult\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//[2,4,6,8,10,8,6,4,2]\")]),s._v(\"\\n\")])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"归并方法\")]),s._v(\" \"),n(\"p\",[s._v(\"接收两个参数，每一项上调用的函数和可选的座位归并基础的初始值。\")]),s._v(\" \"),n(\"p\",[s._v(\"运行的函数接受4个参数：前一个值、当前值、项的索引和数组对象。\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"p\",[s._v(\"reduce()  从前向后\")])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"reduceRight() 从后向前\")])])]),s._v(\" \"),n(\"blockquote\",[n(\"p\",[s._v(\"执行求数组中所有值之和的操作\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language-js extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" values \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" sum \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" values\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"reduce\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"prev\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" cur\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" index\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" prev \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" cur\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"sum\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//15\")]),s._v(\"\\n\")])])])])])])}),[],!1,null,null,null);t.default=e.exports},72:function(s,t,a){s.exports=a.p+\"assets/img/jsObjectFindAttributeFlow.f21b1949.png\"}}]);","extractedComments":[]}